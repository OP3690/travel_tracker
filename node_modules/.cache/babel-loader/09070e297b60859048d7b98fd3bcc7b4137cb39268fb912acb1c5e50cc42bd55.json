{"ast":null,"code":"var _jsxFileName = \"/Users/omprakashutaha/Desktop/Map2/src/components/WorldMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect, useRef } from 'react';\nimport './WorldMap.css';\nimport { countryCodeToName } from '../utils/countryCodeToName';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction countryCodeToFlagEmoji(code) {\n  if (!code || code.length !== 2) return '';\n  return String.fromCodePoint(...[...code.toUpperCase()].map(c => 0x1f1e6 + c.charCodeAt(0) - 65));\n}\nfunction WorldMap({\n  selectedLocations = [],\n  setSelectedLocations = () => {},\n  onLocationClick = () => {}\n}) {\n  _s();\n  const [hoveredName, setHoveredName] = useState('');\n  const [hoveredId, setHoveredId] = useState('');\n  const [mousePos, setMousePos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [transform, setTransform] = useState({\n    x: 0,\n    y: 0,\n    scale: 1\n  });\n  const svgContainerRef = useRef();\n  const [pinPositions, setPinPositions] = useState([]);\n  const [isDragging, setIsDragging] = useState(false);\n  const [lastMousePos, setLastMousePos] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // Load the normalized SVG\n  useEffect(() => {\n    fetch('/WorldMap_SVG_Source.normalized.svg').then(res => res.text()).then(svgContent => {\n      if (svgContainerRef.current) {\n        svgContainerRef.current.innerHTML = svgContent;\n        const svg = svgContainerRef.current.querySelector('svg');\n        if (svg) {\n          svg.setAttribute('width', '100%');\n          svg.setAttribute('height', '100%');\n          svg.setAttribute('viewBox', '0 0 2754 1398');\n          svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n          svg.style.display = 'block';\n        }\n      }\n    });\n  }, []);\n\n  // Highlight selected countries and compute pin positions after SVG is rendered\n  useEffect(() => {\n    var _svgContainerRef$curr;\n    const svgEl = (_svgContainerRef$curr = svgContainerRef.current) === null || _svgContainerRef$curr === void 0 ? void 0 : _svgContainerRef$curr.querySelector('svg');\n    if (!svgEl) return;\n\n    // Remove previous selected\n    svgEl.querySelectorAll('path.selected, circle.selected').forEach(p => p.classList.remove('selected'));\n\n    // For pins\n    const pins = [];\n    selectedLocations.forEach(loc => {\n      // Find all <g> with matching <title>\n      const gs = Array.from(svgEl.querySelectorAll('g')).filter(g => g.querySelector('title') && g.querySelector('title').textContent === loc.name);\n      let largestArea = 0;\n      let pin = null;\n      gs.forEach(g => {\n        // Highlight all paths\n        g.querySelectorAll('path').forEach(path => {\n          path.classList.add('selected');\n          // For pin: use the largest path's bbox\n          try {\n            const bbox = path.getBBox();\n            const area = bbox.width * bbox.height;\n            if (area > largestArea) {\n              largestArea = area;\n              pin = {\n                x: bbox.x + bbox.width / 2,\n                y: bbox.y + bbox.height / 2\n              };\n            }\n          } catch (e) {}\n        });\n        // If there is a circle, prefer it for small countries\n        const circle = g.querySelector('circle');\n        if (circle) {\n          pin = {\n            x: parseFloat(circle.getAttribute('cx')),\n            y: parseFloat(circle.getAttribute('cy'))\n          };\n        }\n      });\n      // Highlight any <path> or <circle> with matching id or class\n      if (loc.id) {\n        svgEl.querySelectorAll(`path[id='${loc.id}'], circle[id='${loc.id}']`).forEach(el => el.classList.add('selected'));\n        svgEl.querySelectorAll(`path.${loc.id}, circle.${loc.id}`).forEach(el => el.classList.add('selected'));\n      }\n      if (pin) pins.push({\n        name: loc.name,\n        ...pin\n      });\n    });\n    setPinPositions(pins);\n  }, [selectedLocations]);\n  function handleLocationClick(event) {\n    let el = event.target;\n    let name = null;\n    let id = null;\n\n    // Try to find the nearest <title> (self, parent <g>, siblings)\n    function findTitle(element) {\n      if (!element) return null;\n      if (element.tagName === 'title') return element.textContent;\n      if (element.querySelector && element.querySelector('title')) return element.querySelector('title').textContent;\n      if (element.previousElementSibling && element.previousElementSibling.tagName === 'title') return element.previousElementSibling.textContent;\n      if (element.nextElementSibling && element.nextElementSibling.tagName === 'title') return element.nextElementSibling.textContent;\n      return null;\n    }\n    let found = false;\n    while (el && el.tagName !== 'svg') {\n      name = findTitle(el);\n      if (name) {\n        id = el.getAttribute('id') || (el.getAttribute('class') ? el.getAttribute('class').split(' ')[0] : name);\n        found = true;\n        break;\n      }\n      el = el.parentNode;\n    }\n\n    // Fallback: if still no name, try to use id or class\n    if (!found && el) {\n      id = el.getAttribute('id') || (el.getAttribute('class') ? el.getAttribute('class').split(' ')[0] : null);\n      name = id;\n    }\n    if (!id || !name) return;\n    setSelectedLocations(prev => {\n      const exists = prev.find(s => s.id === id);\n      if (exists) {\n        return prev.filter(s => s.id !== id);\n      } else {\n        return [...prev, {\n          id,\n          name\n        }];\n      }\n    });\n    onLocationClick({\n      id,\n      name\n    });\n  }\n  function onLocationMouseOver(event) {\n    event.target.title = '';\n    let el = event.target;\n    let name = null;\n    let id = null;\n    // Try to find the nearest <title> and id\n    function findTitle(element) {\n      if (!element) return null;\n      if (element.tagName === 'title') return element.textContent;\n      if (element.querySelector && element.querySelector('title')) return element.querySelector('title').textContent;\n      if (element.previousElementSibling && element.previousElementSibling.tagName === 'title') return element.previousElementSibling.textContent;\n      if (element.nextElementSibling && element.nextElementSibling.tagName === 'title') return element.nextElementSibling.textContent;\n      return null;\n    }\n    while (el && el.tagName !== 'svg') {\n      name = findTitle(el);\n      if (name) {\n        id = el.getAttribute('id') || (el.getAttribute('class') ? el.getAttribute('class').split(' ')[0] : name);\n        break;\n      }\n      el = el.parentNode;\n    }\n    if (!name) return;\n    setHoveredName(name);\n    setHoveredId(id || '');\n    setMousePos({\n      x: event.clientX,\n      y: event.clientY\n    });\n  }\n  function onLocationMouseOut() {\n    setHoveredName('');\n    setHoveredId('');\n  }\n  function handleZoomIn() {\n    setTransform(prev => ({\n      ...prev,\n      scale: Math.min(prev.scale * 1.2, 5)\n    }));\n  }\n  function handleZoomOut() {\n    setTransform(prev => ({\n      ...prev,\n      scale: Math.max(prev.scale / 1.2, 1)\n    }));\n  }\n  function handleReset() {\n    setTransform({\n      x: 0,\n      y: 0,\n      scale: 1\n    });\n  }\n\n  // Drag-to-pan handlers\n  function handleMouseDown(e) {\n    setIsDragging(true);\n    setLastMousePos({\n      x: e.clientX,\n      y: e.clientY\n    });\n  }\n  function handleMouseMove(e) {\n    if (!isDragging) return;\n    const dx = e.clientX - lastMousePos.x;\n    const dy = e.clientY - lastMousePos.y;\n    setTransform(prev => ({\n      ...prev,\n      x: prev.x + dx,\n      y: prev.y + dy\n    }));\n    setLastMousePos({\n      x: e.clientX,\n      y: e.clientY\n    });\n  }\n  function handleMouseUp() {\n    setIsDragging(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"world-map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zoom-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomIn,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomOut,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        title: \"Reset View\",\n        children: \"\\u27F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"svg-container\",\n      ref: svgContainerRef,\n      onClick: handleLocationClick,\n      onMouseOver: onLocationMouseOver,\n      onMouseOut: onLocationMouseOut,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      style: {\n        cursor: isDragging ? 'grabbing' : 'grab',\n        transform: `translate(${transform.x}px, ${transform.y}px) scale(${transform.scale})`,\n        transformOrigin: 'center center'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), hoveredName && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        left: mousePos.x + 10,\n        top: mousePos.y + 10,\n        display: 'flex',\n        alignItems: 'center',\n        gap: '10px',\n        background: 'rgba(33, 33, 33, 0.95)',\n        color: '#fff',\n        padding: '10px 16px',\n        borderRadius: '8px',\n        fontSize: '1.08rem',\n        fontWeight: 500,\n        boxShadow: '0 4px 16px rgba(0,0,0,0.18)',\n        pointerEvents: 'none',\n        zIndex: 1000,\n        minWidth: '120px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '1.6em',\n          filter: 'drop-shadow(0 1px 2px #0002)'\n        },\n        children: countryCodeToFlagEmoji(hoveredId === null || hoveredId === void 0 ? void 0 : hoveredId.slice(0, 2))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: countryCodeToName[hoveredId === null || hoveredId === void 0 ? void 0 : hoveredId.toLowerCase()] || hoveredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this), pinPositions.map((pin, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pin\",\n      style: {\n        left: `${pin.x}px`,\n        top: `${pin.y}px`,\n        transform: `translate(-50%, -50%) scale(${transform.scale})`\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n_s(WorldMap, \"NonB681xF3WkG8kChvWx7v5f86I=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","useRef","countryCodeToName","jsxDEV","_jsxDEV","countryCodeToFlagEmoji","code","length","String","fromCodePoint","toUpperCase","map","c","charCodeAt","WorldMap","selectedLocations","setSelectedLocations","onLocationClick","_s","hoveredName","setHoveredName","hoveredId","setHoveredId","mousePos","setMousePos","x","y","transform","setTransform","scale","svgContainerRef","pinPositions","setPinPositions","isDragging","setIsDragging","lastMousePos","setLastMousePos","fetch","then","res","text","svgContent","current","innerHTML","svg","querySelector","setAttribute","style","display","_svgContainerRef$curr","svgEl","querySelectorAll","forEach","p","classList","remove","pins","loc","gs","Array","from","filter","g","textContent","name","largestArea","pin","path","add","bbox","getBBox","area","width","height","e","circle","parseFloat","getAttribute","id","el","push","handleLocationClick","event","target","findTitle","element","tagName","previousElementSibling","nextElementSibling","found","split","parentNode","prev","exists","find","s","onLocationMouseOver","title","clientX","clientY","onLocationMouseOut","handleZoomIn","Math","min","handleZoomOut","max","handleReset","handleMouseDown","handleMouseMove","dx","dy","handleMouseUp","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseOver","onMouseOut","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","cursor","transformOrigin","left","top","alignItems","gap","background","color","padding","borderRadius","fontSize","fontWeight","boxShadow","pointerEvents","zIndex","minWidth","slice","toLowerCase","index","_c","$RefreshReg$"],"sources":["/Users/omprakashutaha/Desktop/Map2/src/components/WorldMap.js"],"sourcesContent":["import React, { useState, useMemo, useEffect, useRef } from 'react';\nimport './WorldMap.css';\nimport { countryCodeToName } from '../utils/countryCodeToName';\n\nfunction countryCodeToFlagEmoji(code) {\n  if (!code || code.length !== 2) return '';\n  return String.fromCodePoint(...[...code.toUpperCase()].map(c => 0x1f1e6 + c.charCodeAt(0) - 65));\n}\n\nfunction WorldMap({ selectedLocations = [], setSelectedLocations = () => {}, onLocationClick = () => {} }) {\n  const [hoveredName, setHoveredName] = useState('');\n  const [hoveredId, setHoveredId] = useState('');\n  const [mousePos, setMousePos] = useState({ x: 0, y: 0 });\n  const [transform, setTransform] = useState({ x: 0, y: 0, scale: 1 });\n  const svgContainerRef = useRef();\n  const [pinPositions, setPinPositions] = useState([]);\n  const [isDragging, setIsDragging] = useState(false);\n  const [lastMousePos, setLastMousePos] = useState({ x: 0, y: 0 });\n\n  // Load the normalized SVG\n  useEffect(() => {\n    fetch('/WorldMap_SVG_Source.normalized.svg')\n      .then(res => res.text())\n      .then(svgContent => {\n        if (svgContainerRef.current) {\n          svgContainerRef.current.innerHTML = svgContent;\n          const svg = svgContainerRef.current.querySelector('svg');\n          if (svg) {\n            svg.setAttribute('width', '100%');\n            svg.setAttribute('height', '100%');\n            svg.setAttribute('viewBox', '0 0 2754 1398');\n            svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n            svg.style.display = 'block';\n          }\n        }\n      });\n  }, []);\n\n  // Highlight selected countries and compute pin positions after SVG is rendered\n  useEffect(() => {\n    const svgEl = svgContainerRef.current?.querySelector('svg');\n    if (!svgEl) return;\n\n    // Remove previous selected\n    svgEl.querySelectorAll('path.selected, circle.selected').forEach(p => p.classList.remove('selected'));\n\n    // For pins\n    const pins = [];\n    selectedLocations.forEach(loc => {\n      // Find all <g> with matching <title>\n      const gs = Array.from(svgEl.querySelectorAll('g')).filter(\n        g => g.querySelector('title') && g.querySelector('title').textContent === loc.name\n      );\n      let largestArea = 0;\n      let pin = null;\n      gs.forEach(g => {\n        // Highlight all paths\n        g.querySelectorAll('path').forEach(path => {\n          path.classList.add('selected');\n          // For pin: use the largest path's bbox\n          try {\n            const bbox = path.getBBox();\n            const area = bbox.width * bbox.height;\n            if (area > largestArea) {\n              largestArea = area;\n              pin = { x: bbox.x + bbox.width / 2, y: bbox.y + bbox.height / 2 };\n            }\n          } catch (e) {}\n        });\n        // If there is a circle, prefer it for small countries\n        const circle = g.querySelector('circle');\n        if (circle) {\n          pin = {\n            x: parseFloat(circle.getAttribute('cx')),\n            y: parseFloat(circle.getAttribute('cy')),\n          };\n        }\n      });\n      // Highlight any <path> or <circle> with matching id or class\n      if (loc.id) {\n        svgEl.querySelectorAll(`path[id='${loc.id}'], circle[id='${loc.id}']`).forEach(el => el.classList.add('selected'));\n        svgEl.querySelectorAll(`path.${loc.id}, circle.${loc.id}`).forEach(el => el.classList.add('selected'));\n      }\n      if (pin) pins.push({ name: loc.name, ...pin });\n    });\n    setPinPositions(pins);\n  }, [selectedLocations]);\n\n  function handleLocationClick(event) {\n    let el = event.target;\n    let name = null;\n    let id = null;\n\n    // Try to find the nearest <title> (self, parent <g>, siblings)\n    function findTitle(element) {\n      if (!element) return null;\n      if (element.tagName === 'title') return element.textContent;\n      if (element.querySelector && element.querySelector('title')) return element.querySelector('title').textContent;\n      if (element.previousElementSibling && element.previousElementSibling.tagName === 'title') return element.previousElementSibling.textContent;\n      if (element.nextElementSibling && element.nextElementSibling.tagName === 'title') return element.nextElementSibling.textContent;\n      return null;\n    }\n\n    let found = false;\n    while (el && el.tagName !== 'svg') {\n      name = findTitle(el);\n      if (name) {\n        id = el.getAttribute('id') || (el.getAttribute('class') ? el.getAttribute('class').split(' ')[0] : name);\n        found = true;\n        break;\n      }\n      el = el.parentNode;\n    }\n\n    // Fallback: if still no name, try to use id or class\n    if (!found && el) {\n      id = el.getAttribute('id') || (el.getAttribute('class') ? el.getAttribute('class').split(' ')[0] : null);\n      name = id;\n    }\n\n    if (!id || !name) return;\n\n    setSelectedLocations(prev => {\n      const exists = prev.find(s => s.id === id);\n      if (exists) {\n        return prev.filter(s => s.id !== id);\n      } else {\n        return [...prev, { id, name }];\n      }\n    });\n    onLocationClick({ id, name });\n  }\n\n  function onLocationMouseOver(event) {\n    event.target.title = '';\n    let el = event.target;\n    let name = null;\n    let id = null;\n    // Try to find the nearest <title> and id\n    function findTitle(element) {\n      if (!element) return null;\n      if (element.tagName === 'title') return element.textContent;\n      if (element.querySelector && element.querySelector('title')) return element.querySelector('title').textContent;\n      if (element.previousElementSibling && element.previousElementSibling.tagName === 'title') return element.previousElementSibling.textContent;\n      if (element.nextElementSibling && element.nextElementSibling.tagName === 'title') return element.nextElementSibling.textContent;\n      return null;\n    }\n    while (el && el.tagName !== 'svg') {\n      name = findTitle(el);\n      if (name) {\n        id = el.getAttribute('id') || (el.getAttribute('class') ? el.getAttribute('class').split(' ')[0] : name);\n        break;\n      }\n      el = el.parentNode;\n    }\n    if (!name) return;\n    setHoveredName(name);\n    setHoveredId(id || '');\n    setMousePos({ x: event.clientX, y: event.clientY });\n  }\n\n  function onLocationMouseOut() {\n    setHoveredName('');\n    setHoveredId('');\n  }\n\n  function handleZoomIn() {\n    setTransform(prev => ({\n      ...prev,\n      scale: Math.min(prev.scale * 1.2, 5)\n    }));\n  }\n\n  function handleZoomOut() {\n    setTransform(prev => ({\n      ...prev,\n      scale: Math.max(prev.scale / 1.2, 1)\n    }));\n  }\n\n  function handleReset() {\n    setTransform({ x: 0, y: 0, scale: 1 });\n  }\n\n  // Drag-to-pan handlers\n  function handleMouseDown(e) {\n    setIsDragging(true);\n    setLastMousePos({ x: e.clientX, y: e.clientY });\n  }\n\n  function handleMouseMove(e) {\n    if (!isDragging) return;\n    const dx = e.clientX - lastMousePos.x;\n    const dy = e.clientY - lastMousePos.y;\n    setTransform(prev => ({\n      ...prev,\n      x: prev.x + dx,\n      y: prev.y + dy\n    }));\n    setLastMousePos({ x: e.clientX, y: e.clientY });\n  }\n\n  function handleMouseUp() {\n    setIsDragging(false);\n  }\n\n  return (\n    <div className=\"world-map-container\">\n      <div className=\"zoom-controls\">\n        <button onClick={handleZoomIn}>+</button>\n        <button onClick={handleZoomOut}>-</button>\n        <button onClick={handleReset} title=\"Reset View\">⟳</button>\n      </div>\n      <div \n        className=\"svg-container\"\n        ref={svgContainerRef}\n        onClick={handleLocationClick}\n        onMouseOver={onLocationMouseOver}\n        onMouseOut={onLocationMouseOut}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseUp}\n        style={{\n          cursor: isDragging ? 'grabbing' : 'grab',\n          transform: `translate(${transform.x}px, ${transform.y}px) scale(${transform.scale})`,\n          transformOrigin: 'center center'\n        }}\n      />\n      {hoveredName && (\n        <div \n          className=\"tooltip\"\n          style={{\n            left: mousePos.x + 10,\n            top: mousePos.y + 10,\n            display: 'flex',\n            alignItems: 'center',\n            gap: '10px',\n            background: 'rgba(33, 33, 33, 0.95)',\n            color: '#fff',\n            padding: '10px 16px',\n            borderRadius: '8px',\n            fontSize: '1.08rem',\n            fontWeight: 500,\n            boxShadow: '0 4px 16px rgba(0,0,0,0.18)',\n            pointerEvents: 'none',\n            zIndex: 1000,\n            minWidth: '120px'\n          }}\n        >\n          <span style={{ fontSize: '1.6em', filter: 'drop-shadow(0 1px 2px #0002)' }}>\n            {countryCodeToFlagEmoji(hoveredId?.slice(0,2))}\n          </span>\n          <span>{countryCodeToName[hoveredId?.toLowerCase()] || hoveredName}</span>\n        </div>\n      )}\n      {pinPositions.map((pin, index) => (\n        <div\n          key={index}\n          className=\"pin\"\n          style={{\n            left: `${pin.x}px`,\n            top: `${pin.y}px`,\n            transform: `translate(-50%, -50%) scale(${transform.scale})`\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default WorldMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}