{"ast":null,"code":"var _jsxFileName = \"/Users/omprakashutaha/Desktop/Map2/src/components/WorldMapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WorldMapView() {\n  _s();\n  const [time, setTime] = useState(new Date());\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const svgRef = useRef();\n  useEffect(() => {\n    const interval = setInterval(() => setTime(new Date()), 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Attach click handlers to all country paths after SVG loads\n  useEffect(() => {\n    const svg = svgRef.current;\n    if (!svg) return;\n    // Select all paths with class 'landxx' (countries)\n    const countryPaths = svg.querySelectorAll('path.landxx');\n    countryPaths.forEach(path => {\n      path.style.cursor = 'pointer';\n      path.onclick = e => {\n        // Remove highlight from all\n        countryPaths.forEach(p => p.style.stroke = '#ffffff');\n        // Highlight selected\n        path.style.stroke = '#1976d2';\n        path.style.strokeWidth = 2;\n        // Get country name from <title> or id\n        const title = path.querySelector('title');\n        const countryName = title ? title.textContent : path.id;\n        setSelectedCountry(countryName);\n      };\n    });\n  }, [svgRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      maxWidth: 900,\n      margin: '0 auto',\n      padding: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: 16\n      },\n      children: \"World Map Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"clock\",\n      style: {\n        textAlign: 'center',\n        fontSize: 24,\n        marginBottom: 16\n      },\n      children: [time.toLocaleTimeString(), \" (Local Time)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '24px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"object\", {\n        ref: svgRef,\n        type: \"image/svg+xml\",\n        data: require('../assets/BlankMap-World.svg').default,\n        style: {\n          width: '100%',\n          maxWidth: 900,\n          height: 'auto',\n          border: '1px solid #eee',\n          borderRadius: 8\n        },\n        \"aria-label\": \"World SVG Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), selectedCountry && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selected Country:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), \" \", selectedCountry]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: '300px',\n        width: '100%',\n        borderRadius: 12,\n        overflow: 'hidden',\n        boxShadow: '0 2px 12px rgba(0,0,0,0.08)',\n        marginTop: 32\n      },\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [20, 0],\n        zoom: 2,\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        scrollWheelZoom: true,\n        children: /*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(WorldMapView, \"egV66MbrsW0JYS3MjPbB7d8zc6s=\");\n_c = WorldMapView;\nvar _c;\n$RefreshReg$(_c, \"WorldMapView\");","map":{"version":3,"names":["React","useEffect","useRef","useState","MapContainer","TileLayer","jsxDEV","_jsxDEV","WorldMapView","_s","time","setTime","Date","selectedCountry","setSelectedCountry","svgRef","interval","setInterval","clearInterval","svg","current","countryPaths","querySelectorAll","forEach","path","style","cursor","onclick","e","p","stroke","strokeWidth","title","querySelector","countryName","textContent","id","className","maxWidth","margin","padding","children","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","toLocaleTimeString","ref","type","data","require","default","width","height","border","borderRadius","marginTop","overflow","boxShadow","center","zoom","scrollWheelZoom","attribution","url","_c","$RefreshReg$"],"sources":["/Users/omprakashutaha/Desktop/Map2/src/components/WorldMapView.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nexport default function WorldMapView() {\n  const [time, setTime] = useState(new Date());\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const svgRef = useRef();\n\n  useEffect(() => {\n    const interval = setInterval(() => setTime(new Date()), 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Attach click handlers to all country paths after SVG loads\n  useEffect(() => {\n    const svg = svgRef.current;\n    if (!svg) return;\n    // Select all paths with class 'landxx' (countries)\n    const countryPaths = svg.querySelectorAll('path.landxx');\n    countryPaths.forEach(path => {\n      path.style.cursor = 'pointer';\n      path.onclick = (e) => {\n        // Remove highlight from all\n        countryPaths.forEach(p => p.style.stroke = '#ffffff');\n        // Highlight selected\n        path.style.stroke = '#1976d2';\n        path.style.strokeWidth = 2;\n        // Get country name from <title> or id\n        const title = path.querySelector('title');\n        const countryName = title ? title.textContent : path.id;\n        setSelectedCountry(countryName);\n      };\n    });\n  }, [svgRef]);\n\n  return (\n    <div className=\"container\" style={{ maxWidth: 900, margin: '0 auto', padding: 24 }}>\n      <h1 style={{ textAlign: 'center', marginBottom: 16 }}>World Map Time</h1>\n      <div id=\"clock\" style={{ textAlign: 'center', fontSize: 24, marginBottom: 16 }}>\n        {time.toLocaleTimeString()} (Local Time)\n      </div>\n      <div style={{ textAlign: 'center', margin: '24px 0' }}>\n        <object\n          ref={svgRef}\n          type=\"image/svg+xml\"\n          data={require('../assets/BlankMap-World.svg').default}\n          style={{ width: '100%', maxWidth: 900, height: 'auto', border: '1px solid #eee', borderRadius: 8 }}\n          aria-label=\"World SVG Map\"\n        />\n      </div>\n      {selectedCountry && (\n        <div style={{ textAlign: 'center', marginTop: 16 }}>\n          <strong>Selected Country:</strong> {selectedCountry}\n        </div>\n      )}\n      <div id=\"map\" style={{ height: '300px', width: '100%', borderRadius: 12, overflow: 'hidden', boxShadow: '0 2px 12px rgba(0,0,0,0.08)', marginTop: 32 }}>\n        <MapContainer center={[20, 0]} zoom={2} style={{ height: '100%', width: '100%' }} scrollWheelZoom={true}>\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n        </MapContainer>\n      </div>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}