{"ast":null,"code":"var _jsxFileName = \"/Users/omprakashutaha/Desktop/Map2/src/components/WorldMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect, useRef } from 'react';\nimport './WorldMap.css';\nimport { countryCodeToName } from '../utils/countryCodeToName';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorldMap({\n  selectedLocations = [],\n  setSelectedLocations = () => {},\n  onLocationClick = () => {}\n}) {\n  _s();\n  const [hoveredName, setHoveredName] = useState('');\n  const [mousePos, setMousePos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [transform, setTransform] = useState({\n    x: 0,\n    y: 0,\n    scale: 1\n  });\n  const svgContainerRef = useRef();\n  const [pinPositions, setPinPositions] = useState([]);\n  const [isDragging, setIsDragging] = useState(false);\n  const [lastMousePos, setLastMousePos] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // Load the normalized SVG\n  useEffect(() => {\n    fetch('/WorldMap_SVG_Source.normalized.svg').then(res => res.text()).then(svgContent => {\n      if (svgContainerRef.current) {\n        svgContainerRef.current.innerHTML = svgContent;\n        const svg = svgContainerRef.current.querySelector('svg');\n        if (svg) {\n          svg.setAttribute('width', '100%');\n          svg.setAttribute('height', '100%');\n          svg.setAttribute('viewBox', '0 0 2754 1398');\n          svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n          svg.style.display = 'block';\n          // Remove all <title> elements to prevent native SVG tooltips\n          svg.querySelectorAll('title').forEach(t => t.remove());\n        }\n      }\n    });\n  }, []);\n\n  // Highlight selected countries and compute pin positions after SVG is rendered\n  useEffect(() => {\n    var _svgContainerRef$curr;\n    const svgEl = (_svgContainerRef$curr = svgContainerRef.current) === null || _svgContainerRef$curr === void 0 ? void 0 : _svgContainerRef$curr.querySelector('svg');\n    if (!svgEl) return;\n\n    // Remove previous selected\n    svgEl.querySelectorAll('path.selected, circle.selected').forEach(p => p.classList.remove('selected'));\n\n    // For pins\n    const pins = [];\n    selectedLocations.forEach(loc => {\n      // Find all <g> with matching <title>\n      const gs = Array.from(svgEl.querySelectorAll('g')).filter(g => g.querySelector('title') && g.querySelector('title').textContent === loc.name);\n      let largestArea = 0;\n      let pin = null;\n      gs.forEach(g => {\n        // Highlight all paths\n        g.querySelectorAll('path').forEach(path => {\n          path.classList.add('selected');\n          // For pin: use the largest path's bbox\n          try {\n            const bbox = path.getBBox();\n            const area = bbox.width * bbox.height;\n            if (area > largestArea) {\n              largestArea = area;\n              pin = {\n                x: bbox.x + bbox.width / 2,\n                y: bbox.y + bbox.height / 2\n              };\n            }\n          } catch (e) {}\n        });\n        // If there is a circle, prefer it for small countries\n        const circle = g.querySelector('circle');\n        if (circle) {\n          pin = {\n            x: parseFloat(circle.getAttribute('cx')),\n            y: parseFloat(circle.getAttribute('cy'))\n          };\n        }\n      });\n      // Highlight any <path> or <circle> with matching id or class\n      if (loc.id) {\n        svgEl.querySelectorAll(`path[id='${loc.id}'], circle[id='${loc.id}']`).forEach(el => el.classList.add('selected'));\n        svgEl.querySelectorAll(`path.${loc.id}, circle.${loc.id}`).forEach(el => el.classList.add('selected'));\n      }\n      if (pin) pins.push({\n        name: loc.name,\n        ...pin\n      });\n    });\n    setPinPositions(pins);\n  }, [selectedLocations]);\n  function handleLocationClick(event) {\n    let el = event.target;\n    let name = null;\n    let id = null;\n\n    // Try to find the nearest <title> (self, parent <g>, siblings)\n    function findTitle(element) {\n      if (!element) return null;\n      if (element.tagName === 'title') return element.textContent;\n      if (element.querySelector && element.querySelector('title')) return element.querySelector('title').textContent;\n      if (element.previousElementSibling && element.previousElementSibling.tagName === 'title') return element.previousElementSibling.textContent;\n      if (element.nextElementSibling && element.nextElementSibling.tagName === 'title') return element.nextElementSibling.textContent;\n      return null;\n    }\n    let found = false;\n    while (el && el.tagName !== 'svg') {\n      name = findTitle(el);\n      if (name) {\n        id = el.getAttribute('id') || (el.getAttribute('class') ? el.getAttribute('class').split(' ')[0] : name);\n        found = true;\n        break;\n      }\n      el = el.parentNode;\n    }\n\n    // Fallback: if still no name, try to use id or class\n    if (!found && el) {\n      id = el.getAttribute('id') || (el.getAttribute('class') ? el.getAttribute('class').split(' ')[0] : null);\n      name = id;\n    }\n    if (!id || !name) return;\n    setSelectedLocations(prev => {\n      const exists = prev.find(s => s.id === id);\n      if (exists) {\n        return prev.filter(s => s.id !== id);\n      } else {\n        return [...prev, {\n          id,\n          name\n        }];\n      }\n    });\n    onLocationClick({\n      id,\n      name\n    });\n  }\n  function onLocationMouseOver(event) {\n    var _event$target$closest, _event$target$closest2;\n    const name = (_event$target$closest = event.target.closest('g')) === null || _event$target$closest === void 0 ? void 0 : (_event$target$closest2 = _event$target$closest.querySelector('title')) === null || _event$target$closest2 === void 0 ? void 0 : _event$target$closest2.textContent;\n    if (name) {\n      setHoveredName(name);\n      setMousePos({\n        x: event.clientX,\n        y: event.clientY\n      });\n    }\n  }\n  function onLocationMouseOut() {\n    setHoveredName('');\n  }\n  function handleZoomIn() {\n    setTransform(prev => ({\n      ...prev,\n      scale: Math.min(prev.scale * 1.2, 5)\n    }));\n  }\n  function handleZoomOut() {\n    setTransform(prev => ({\n      ...prev,\n      scale: Math.max(prev.scale / 1.2, 1)\n    }));\n  }\n\n  // Drag-to-pan handlers\n  function handleMouseDown(e) {\n    setIsDragging(true);\n    setLastMousePos({\n      x: e.clientX,\n      y: e.clientY\n    });\n  }\n  function handleMouseMove(e) {\n    if (!isDragging) return;\n    const dx = e.clientX - lastMousePos.x;\n    const dy = e.clientY - lastMousePos.y;\n    setTransform(prev => ({\n      ...prev,\n      x: prev.x + dx,\n      y: prev.y + dy\n    }));\n    setLastMousePos({\n      x: e.clientX,\n      y: e.clientY\n    });\n  }\n  function handleMouseUp() {\n    setIsDragging(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"world-map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zoom-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomIn,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomOut,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"svg-container\",\n      ref: svgContainerRef,\n      onClick: handleLocationClick,\n      onMouseOver: onLocationMouseOver,\n      onMouseOut: onLocationMouseOut,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      style: {\n        cursor: isDragging ? 'grabbing' : 'grab',\n        transform: `translate(${transform.x}px, ${transform.y}px) scale(${transform.scale})`,\n        transformOrigin: 'center center'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), hoveredName && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        left: mousePos.x + 10,\n        top: mousePos.y + 10\n      },\n      children: hoveredName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), pinPositions.map((pin, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pin\",\n      style: {\n        left: `${pin.x}px`,\n        top: `${pin.y}px`,\n        transform: `translate(-50%, -50%) scale(${transform.scale})`\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(WorldMap, \"KfBV+AR/MfSu7AXMiJrtYiO5ArM=\");\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","useRef","countryCodeToName","jsxDEV","_jsxDEV","WorldMap","selectedLocations","setSelectedLocations","onLocationClick","_s","hoveredName","setHoveredName","mousePos","setMousePos","x","y","transform","setTransform","scale","svgContainerRef","pinPositions","setPinPositions","isDragging","setIsDragging","lastMousePos","setLastMousePos","fetch","then","res","text","svgContent","current","innerHTML","svg","querySelector","setAttribute","style","display","querySelectorAll","forEach","t","remove","_svgContainerRef$curr","svgEl","p","classList","pins","loc","gs","Array","from","filter","g","textContent","name","largestArea","pin","path","add","bbox","getBBox","area","width","height","e","circle","parseFloat","getAttribute","id","el","push","handleLocationClick","event","target","findTitle","element","tagName","previousElementSibling","nextElementSibling","found","split","parentNode","prev","exists","find","s","onLocationMouseOver","_event$target$closest","_event$target$closest2","closest","clientX","clientY","onLocationMouseOut","handleZoomIn","Math","min","handleZoomOut","max","handleMouseDown","handleMouseMove","dx","dy","handleMouseUp","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseOver","onMouseOut","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","cursor","transformOrigin","left","top","map","index","_c","$RefreshReg$"],"sources":["/Users/omprakashutaha/Desktop/Map2/src/components/WorldMap.js"],"sourcesContent":["import React, { useState, useMemo, useEffect, useRef } from 'react';\nimport './WorldMap.css';\nimport { countryCodeToName } from '../utils/countryCodeToName';\n\nfunction WorldMap({ selectedLocations = [], setSelectedLocations = () => {}, onLocationClick = () => {} }) {\n  const [hoveredName, setHoveredName] = useState('');\n  const [mousePos, setMousePos] = useState({ x: 0, y: 0 });\n  const [transform, setTransform] = useState({ x: 0, y: 0, scale: 1 });\n  const svgContainerRef = useRef();\n  const [pinPositions, setPinPositions] = useState([]);\n  const [isDragging, setIsDragging] = useState(false);\n  const [lastMousePos, setLastMousePos] = useState({ x: 0, y: 0 });\n\n  // Load the normalized SVG\n  useEffect(() => {\n    fetch('/WorldMap_SVG_Source.normalized.svg')\n      .then(res => res.text())\n      .then(svgContent => {\n        if (svgContainerRef.current) {\n          svgContainerRef.current.innerHTML = svgContent;\n          const svg = svgContainerRef.current.querySelector('svg');\n          if (svg) {\n            svg.setAttribute('width', '100%');\n            svg.setAttribute('height', '100%');\n            svg.setAttribute('viewBox', '0 0 2754 1398');\n            svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n            svg.style.display = 'block';\n            // Remove all <title> elements to prevent native SVG tooltips\n            svg.querySelectorAll('title').forEach(t => t.remove());\n          }\n        }\n      });\n  }, []);\n\n  // Highlight selected countries and compute pin positions after SVG is rendered\n  useEffect(() => {\n    const svgEl = svgContainerRef.current?.querySelector('svg');\n    if (!svgEl) return;\n\n    // Remove previous selected\n    svgEl.querySelectorAll('path.selected, circle.selected').forEach(p => p.classList.remove('selected'));\n\n    // For pins\n    const pins = [];\n    selectedLocations.forEach(loc => {\n      // Find all <g> with matching <title>\n      const gs = Array.from(svgEl.querySelectorAll('g')).filter(\n        g => g.querySelector('title') && g.querySelector('title').textContent === loc.name\n      );\n      let largestArea = 0;\n      let pin = null;\n      gs.forEach(g => {\n        // Highlight all paths\n        g.querySelectorAll('path').forEach(path => {\n          path.classList.add('selected');\n          // For pin: use the largest path's bbox\n          try {\n            const bbox = path.getBBox();\n            const area = bbox.width * bbox.height;\n            if (area > largestArea) {\n              largestArea = area;\n              pin = { x: bbox.x + bbox.width / 2, y: bbox.y + bbox.height / 2 };\n            }\n          } catch (e) {}\n        });\n        // If there is a circle, prefer it for small countries\n        const circle = g.querySelector('circle');\n        if (circle) {\n          pin = {\n            x: parseFloat(circle.getAttribute('cx')),\n            y: parseFloat(circle.getAttribute('cy')),\n          };\n        }\n      });\n      // Highlight any <path> or <circle> with matching id or class\n      if (loc.id) {\n        svgEl.querySelectorAll(`path[id='${loc.id}'], circle[id='${loc.id}']`).forEach(el => el.classList.add('selected'));\n        svgEl.querySelectorAll(`path.${loc.id}, circle.${loc.id}`).forEach(el => el.classList.add('selected'));\n      }\n      if (pin) pins.push({ name: loc.name, ...pin });\n    });\n    setPinPositions(pins);\n  }, [selectedLocations]);\n\n  function handleLocationClick(event) {\n    let el = event.target;\n    let name = null;\n    let id = null;\n\n    // Try to find the nearest <title> (self, parent <g>, siblings)\n    function findTitle(element) {\n      if (!element) return null;\n      if (element.tagName === 'title') return element.textContent;\n      if (element.querySelector && element.querySelector('title')) return element.querySelector('title').textContent;\n      if (element.previousElementSibling && element.previousElementSibling.tagName === 'title') return element.previousElementSibling.textContent;\n      if (element.nextElementSibling && element.nextElementSibling.tagName === 'title') return element.nextElementSibling.textContent;\n      return null;\n    }\n\n    let found = false;\n    while (el && el.tagName !== 'svg') {\n      name = findTitle(el);\n      if (name) {\n        id = el.getAttribute('id') || (el.getAttribute('class') ? el.getAttribute('class').split(' ')[0] : name);\n        found = true;\n        break;\n      }\n      el = el.parentNode;\n    }\n\n    // Fallback: if still no name, try to use id or class\n    if (!found && el) {\n      id = el.getAttribute('id') || (el.getAttribute('class') ? el.getAttribute('class').split(' ')[0] : null);\n      name = id;\n    }\n\n    if (!id || !name) return;\n\n    setSelectedLocations(prev => {\n      const exists = prev.find(s => s.id === id);\n      if (exists) {\n        return prev.filter(s => s.id !== id);\n      } else {\n        return [...prev, { id, name }];\n      }\n    });\n    onLocationClick({ id, name });\n  }\n\n  function onLocationMouseOver(event) {\n    const name = event.target.closest('g')?.querySelector('title')?.textContent;\n    if (name) {\n      setHoveredName(name);\n      setMousePos({ x: event.clientX, y: event.clientY });\n    }\n  }\n\n  function onLocationMouseOut() {\n    setHoveredName('');\n  }\n\n  function handleZoomIn() {\n    setTransform(prev => ({\n      ...prev,\n      scale: Math.min(prev.scale * 1.2, 5)\n    }));\n  }\n\n  function handleZoomOut() {\n    setTransform(prev => ({\n      ...prev,\n      scale: Math.max(prev.scale / 1.2, 1)\n    }));\n  }\n\n  // Drag-to-pan handlers\n  function handleMouseDown(e) {\n    setIsDragging(true);\n    setLastMousePos({ x: e.clientX, y: e.clientY });\n  }\n\n  function handleMouseMove(e) {\n    if (!isDragging) return;\n    const dx = e.clientX - lastMousePos.x;\n    const dy = e.clientY - lastMousePos.y;\n    setTransform(prev => ({\n      ...prev,\n      x: prev.x + dx,\n      y: prev.y + dy\n    }));\n    setLastMousePos({ x: e.clientX, y: e.clientY });\n  }\n\n  function handleMouseUp() {\n    setIsDragging(false);\n  }\n\n  return (\n    <div className=\"world-map-container\">\n      <div className=\"zoom-controls\">\n        <button onClick={handleZoomIn}>+</button>\n        <button onClick={handleZoomOut}>-</button>\n      </div>\n      <div \n        className=\"svg-container\"\n        ref={svgContainerRef}\n        onClick={handleLocationClick}\n        onMouseOver={onLocationMouseOver}\n        onMouseOut={onLocationMouseOut}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseUp}\n        style={{\n          cursor: isDragging ? 'grabbing' : 'grab',\n          transform: `translate(${transform.x}px, ${transform.y}px) scale(${transform.scale})`,\n          transformOrigin: 'center center'\n        }}\n      />\n      {hoveredName && (\n        <div \n          className=\"tooltip\"\n          style={{\n            left: mousePos.x + 10,\n            top: mousePos.y + 10\n          }}\n        >\n          {hoveredName}\n        </div>\n      )}\n      {pinPositions.map((pin, index) => (\n        <div\n          key={index}\n          className=\"pin\"\n          style={{\n            left: `${pin.x}px`,\n            top: `${pin.y}px`,\n            transform: `translate(-50%, -50%) scale(${transform.scale})`\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default WorldMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}